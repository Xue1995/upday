<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
           
    <context:component-scan base-package="com.xue.*.Service" />
             
    <!-- 关于hibernante数据库的配置 -->      
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<value>classpath:config/jdbc.properties</value>
		</property>
	</bean>  
	<!-- 配置数据库连接池 （c3p0） -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 基本信息 -->
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 其他配置 -->
		<!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize" value="5" />
		<!--连接池中保留的最小连接数。Default: 3 -->
		<property name="minPoolSize" value="5" />
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="15" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="5" />
		<!-- 控制数据源内加载的PreparedStatements数量。如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 -->
		<property name="maxStatements" value="20" />
		<!-- maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。Default: 0 -->
		<property name="maxStatementsPerConnection" value="15" />
		<!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="1800" />
	</bean>
	<!--  JDBC的连接，把dataSource注入JdbcTemplate -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<!-- property 属性 ，name  名字 -->
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 创建mybatis会话工厂(SessionFacory) -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    	<!-- 引入数据库连接 -->
       <property name="dataSource" ref="dataSource"></property>
       <property name="mapperLocations" value="classpath:com/xue/mappers/*.xml"></property>
       <!-- 第二种是：采用mybatis配置文件(mybatis-config.xml)的方式来间接声明mapper.xml文件的位置，
       		同时，这里可以直接定义mapper.xml文件中所用到的各种类的别名 -->
       <property name="configLocation" value="classpath:config/mybatis-config.xml"></property>
    </bean>
    
    <!--  <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
    	<constructor-arg ref="sqlSessionFactory"></constructor-arg>				  
    </bean>  -->
    
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--  指定要扫描的包的全路径名称,如果有多个包用英文状态下的逗号分隔 -->
		<property name="basePackage" value="com.xue.Common.Dao"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	 </bean>
    
</beans>